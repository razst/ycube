/*
 * isismepsv2_ivid7_pbu_types.h
 *
 * AUTOGENERATED CODE
 * Please do not perform manual edits
 * Generated using autogen v1.0.3
 *
 * Generated from:
 *  - imepsv2_structs.yaml
 *  - imepsv2_ivid7_pbu.yaml
 */

#ifndef ISISMEPSV2_IVID7_PBU_TYPES_H_
#define ISISMEPSV2_IVID7_PBU_TYPES_H_

#include <stddef.h>
#include <stdint.h>

#ifdef __cplusplus
extern "C"
{
#endif

/* DEFINES */

#define ISISMEPSV2_IVID7_PBU_NOP_ID {0x12, 0x07, 0x02, 0x00}
#define ISISMEPSV2_IVID7_PBU_CANCEL_ID {0x12, 0x07, 0x04, 0x00}
#define ISISMEPSV2_IVID7_PBU_RESETWATCHDOG_ID {0x12, 0x07, 0x06, 0x00}
#define ISISMEPSV2_IVID7_PBU_GETSYSTEMSTATUS_ID {0x12, 0x07, 0x40, 0x00}
#define ISISMEPSV2_IVID7_PBU_GETABFSTATE_ID {0x12, 0x07, 0x44, 0x00}
#define ISISMEPSV2_IVID7_PBU_GETHOUSEKEEPINGDATARAW_ID {0x12, 0x07, 0x60, 0x00}
#define ISISMEPSV2_IVID7_PBU_GETHOUSEKEEPINGDATAENG_ID {0x12, 0x07, 0x62, 0x00}
#define ISISMEPSV2_IVID7_PBU_GETHOUSEKEEPINGDATARUNNINGAVG_ID {0x12, 0x07, 0x64, 0x00}
#define ISISMEPSV2_IVID7_PBU_GETCONFIGURATIONPARAMETER_ID {0x12, 0x07, 0x82, 0x00}
#define ISISMEPSV2_IVID7_PBU_SETCONFIGURATIONPARAMETER_ID {0x12, 0x07, 0x84, 0x00}
#define ISISMEPSV2_IVID7_PBU_RESETCONFIGURATIONPARAMETER_ID {0x12, 0x07, 0x86, 0x00}
#define ISISMEPSV2_IVID7_PBU_RESETCONFIGURATION_ID {0x12, 0x07, 0x90, 0x00}
#define ISISMEPSV2_IVID7_PBU_LOADCONFIGURATION_ID {0x12, 0x07, 0x92, 0x00}
#define ISISMEPSV2_IVID7_PBU_SAVECONFIGURATION_ID {0x12, 0x07, 0x94, 0x00}
#define ISISMEPSV2_IVID7_PBU_RESET_ID {0x12, 0x07, 0xAA, 0x00}
#define ISISMEPSV2_IVID7_PBU_CORRECTTIME_ID {0x12, 0x07, 0xC4, 0x00}
#define ISISMEPSV2_IVID7_PBU_ZERORESETCAUSECOUNTERS_ID {0x12, 0x07, 0xC6, 0x00}


/* ENUMS */

/* STRUCTS */

/*!
 *  ISISMEPSV2_IVID7_PBU instance structure
 */
typedef struct
{
    uint8_t i2cAddr; /*!< I2C address used for this instance */
} ISISMEPSV2_IVID7_PBU_t;

/*!
 * Union for storing the parameters for struct ReplyHeader.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__replyheader_t
{
    unsigned char raw[5];
    struct __attribute__ ((__packed__))
    {
        uint8_t stid; /*!< See "System Type Identifier (STID)" (page 22) */
        uint8_t ivid; /*!< See "Interface Version Identifier (IVID)" (page 23) */
        uint8_t rc; /*!< See "Board Identifier (BID)" (page 24) */
        uint8_t bid; /*!< Response code as stated in the header (inside parenthesis). */
        uint8_t cmderr : 4; /*!< See "Response Status Information (STAT)" (page 25) */
        uint8_t reserved : 3; /*!< See "Response Status Information (STAT)" (page 25) */
        uint8_t new_flag : 1; /*!< See "Response Status Information (STAT)" (page 25) */
    } fields;
} isismepsv2_ivid7_pbu__replyheader_t;

/*!
 * Union for storing the parameters for struct VIPDraw.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__vipdraw_t
{
    unsigned char raw[6];
    struct __attribute__ ((__packed__))
    {
        int16_t volt; /*!<  \note conversion: eng. value [in mV] = 0.9765625 * raw + 0*/
        int16_t current; /*!<  \note conversion: eng. value [in mA] = 0.305175781 * raw + 0*/
        int16_t power; /*!<  \note conversion: eng. value [in mW] = 9.765625 * raw + 0*/
    } fields;
} isismepsv2_ivid7_pbu__vipdraw_t;

/*!
 * Union for storing the parameters for struct VIPDeng.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__vipdeng_t
{
    unsigned char raw[6];
    struct __attribute__ ((__packed__))
    {
        int16_t volt; /*!<  */
        int16_t current; /*!<  */
        int16_t power; /*!<  \note conversion: eng. value [in mW] = 10 * raw */
    } fields;
} isismepsv2_ivid7_pbu__vipdeng_t;

/*!
 * Union for storing the parameters for struct BPDraw.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__bpdraw_t
{
    unsigned char raw[22];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__vipdraw_t vip_bp_input; /*!<  */
        uint16_t stat_bp; /*!<  */
        uint16_t volt_cell1; /*!<  */
        uint16_t volt_cell2; /*!<  */
        uint16_t volt_cell3; /*!<  */
        uint16_t volt_cell4; /*!<  */
        uint16_t bat_temp1; /*!<  */
        uint16_t bat_temp2; /*!<  */
        uint16_t bat_temp3; /*!<  */
    } fields;
} isismepsv2_ivid7_pbu__bpdraw_t;

/*!
 * Union for storing the parameters for struct BPDeng.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__bpdeng_t
{
    unsigned char raw[22];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__vipdeng_t vip_bp_input; /*!<  */
        uint16_t stat_bp; /*!<  */
        int16_t volt_cell1; /*!<  */
        int16_t volt_cell2; /*!<  */
        int16_t volt_cell3; /*!<  */
        int16_t volt_cell4; /*!<  */
        int16_t bat_temp1; /*!<  \note conversion: eng. value [in 째C] = 0.01 * raw */
        int16_t bat_temp2; /*!<  \note conversion: eng. value [in 째C] = 0.01 * raw */
        int16_t bat_temp3; /*!<  \note conversion: eng. value [in 째C] = 0.01 * raw */
    } fields;
} isismepsv2_ivid7_pbu__bpdeng_t;

/*!
 * Union for storing the parameters for struct BatteryPackStatus.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__batterypackstatus_t
{
    unsigned char raw[2];
    struct __attribute__ ((__packed__))
    {
        uint16_t under_voltage_cell_1 : 1; /*!< Battery cell 1 under voltage */
        uint16_t under_voltage_cell_2 : 1; /*!< Battery cell 2 under voltage */
        uint16_t under_voltage_cell_3 : 1; /*!< Battery cell 3 under voltage */
        uint16_t under_voltage_cell_4 : 1; /*!< Battery cell 4 under voltage */
        uint16_t over_voltage_cell_1 : 1; /*!< Battery cell 1 over voltage */
        uint16_t over_voltage_cell_2 : 1; /*!< Battery cell 2 over voltage */
        uint16_t over_voltage_cell_3 : 1; /*!< Battery cell 3 over voltage */
        uint16_t over_voltage_cell_4 : 1; /*!< Battery cell 4 over voltage */
        uint16_t balancing_cell_1 : 1; /*!< Battery cell 1 balancing */
        uint16_t balancing_cell_2 : 1; /*!< Battery cell 2 balancing */
        uint16_t balancing_cell_3 : 1; /*!< Battery cell 3 balancing */
        uint16_t balancing_cell_4 : 1; /*!< Battery cell 4 balancing */
        uint16_t heater_active : 1; /*!< Battery pack heater status */
        uint16_t reserved : 2; /*!< Battery pack heater status */
        uint16_t pack_enabled : 1; /*!< Battery pack enabled. Bitflag is set when the battery is connected to the output bus. */
    } fields;
} isismepsv2_ivid7_pbu__batterypackstatus_t;

/*!
 * Union for storing the parameters received by getabfstate.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__getabfstate__from_t
{
    unsigned char raw[7];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__replyheader_t reply_header; /*!<  */
        uint8_t abf_placed_0; /*!<  */
        uint8_t abf_placed_1; /*!<  */
    } fields;
} isismepsv2_ivid7_pbu__getabfstate__from_t;

/*!
 * Union for storing the parameters received by getconfigurationparameter.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__getconfigurationparameter__from_t
{
    unsigned char raw[16];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__replyheader_t reply_header; /*!<  */
        uint8_t reserved; /*!<  */
        uint16_t par_id; /*!< parameter id of the parameter to get */
        uint8_t par_val[8]; /*!< parameter value encompassing n bytes. The length depends on the parameter type. */
    } fields;
} isismepsv2_ivid7_pbu__getconfigurationparameter__from_t;

/*!
 * Union for storing the parameters received by gethousekeepingdataeng.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__gethousekeepingdataeng__from_t
{
    unsigned char raw[84];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__replyheader_t reply_header; /*!< "See \""System Type Identifier (STID)\"" (page 22)" */
        uint8_t reserved; /*!< (reserved) */
        int16_t volt_brdsup; /*!< Voltage of internal board supply */
        int16_t temp; /*!< Measured temperature provided by a sensor internal to the MCU expressed \note conversion: eng. value [in 째C] = 0.01 * raw */
        isismepsv2_ivid7_pbu__vipdeng_t vip_input; /*!< Input V, I and P data for the unit in raw form. Effectively a sum of all BPx */
        isismepsv2_ivid7_pbu__batterypackstatus_t stat_bu; /*!< Bitflag field showing any raised flags on any battery pack (bitwise OR of all STAT_BP fields in BPxraw). */
        isismepsv2_ivid7_pbu__bpdeng_t bp1; /*!< Battery pack channel information */
        isismepsv2_ivid7_pbu__bpdeng_t bp2; /*!< Battery pack channel information */
        isismepsv2_ivid7_pbu__bpdeng_t bp3; /*!< Battery pack channel information */
    } fields;
} isismepsv2_ivid7_pbu__gethousekeepingdataeng__from_t;

/*!
 * Union for storing the parameters received by gethousekeepingdataraw.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__gethousekeepingdataraw__from_t
{
    unsigned char raw[84];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__replyheader_t reply_header; /*!< "See \""System Type Identifier (STID)\"" (page 22)" */
        uint8_t reserved; /*!< (reserved) */
        uint16_t volt_brdsup; /*!< Voltage of internal board supply in raw form. */
        uint16_t temp; /*!< Measured temperature provided by a sensor internal to the MCU expressed in raw form */
        isismepsv2_ivid7_pbu__vipdraw_t vip_input; /*!< Input V, I and P data for the unit in raw form. Effectively a sum of all BPxraw. */
        isismepsv2_ivid7_pbu__batterypackstatus_t stat_bu; /*!< Bitflag field showing any raised flags on any battery pack (bitwise OR of all STAT_BP fields in BPxraw). */
        isismepsv2_ivid7_pbu__bpdraw_t bp1; /*!< Battery pack channel information in raw form. */
        isismepsv2_ivid7_pbu__bpdraw_t bp2; /*!< Battery pack channel information in raw form. */
        isismepsv2_ivid7_pbu__bpdraw_t bp3; /*!< Battery pack channel information in raw form. */
    } fields;
} isismepsv2_ivid7_pbu__gethousekeepingdataraw__from_t;

/*!
 * Union for storing the parameters received by gethousekeepingdatarunningavg.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__gethousekeepingdatarunningavg__from_t
{
    unsigned char raw[84];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__replyheader_t reply_header; /*!< "See \""System Type Identifier (STID)\"" (page 22)" */
        uint8_t reserved; /*!< (reserved) */
        int16_t volt_brdsup; /*!< Voltage of internal board supply */
        int16_t temp; /*!< Measured temperature provided by a sensor internal to the MCU expressed \note conversion: eng. value = 0.01 * raw */
        isismepsv2_ivid7_pbu__vipdeng_t vip_input; /*!< Input V, I and P data for the unit in raw form. Effectively a sum of all BPx */
        isismepsv2_ivid7_pbu__batterypackstatus_t stat_bu; /*!< Bitflag field showing any raised flags on any battery pack (bitwise OR of all STAT_BP fields in BPxraw). */
        isismepsv2_ivid7_pbu__bpdeng_t bp1; /*!< Battery pack channel information */
        isismepsv2_ivid7_pbu__bpdeng_t bp2; /*!< Battery pack channel information */
        isismepsv2_ivid7_pbu__bpdeng_t bp3; /*!< Battery pack channel information */
    } fields;
} isismepsv2_ivid7_pbu__gethousekeepingdatarunningavg__from_t;

/*!
 * Union for storing the parameters received by getsystemstatus.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__getsystemstatus__from_t
{
    unsigned char raw[36];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__replyheader_t reply_header; /*!<  */
        uint8_t mode; /*!< Indicates the current mode of the system. */
        uint8_t conf; /*!< Read/write configuration parameters have been changed by the EPS master since the last parameters load/save operation */
        uint8_t reset_cause; /*!< Cause of last reset. */
        uint32_t uptime; /*!<  */
        uint16_t error; /*!<  */
        uint16_t rc_cnt_pwron; /*!<  */
        uint16_t rc_cnt_wdg; /*!<  */
        uint16_t rc_cnt_cmd; /*!<  */
        uint16_t rc_cnt_pweron_mcu; /*!<  */
        uint16_t rc_cnt_emlopo; /*!<  */
        uint16_t prevcmd_elapsed; /*!<  */
        uint32_t unix_time; /*!<  */
        uint8_t unix_year; /*!<  \note conversion: eng. value = raw+ 2000*/
        uint8_t unix_month; /*!<  */
        uint8_t unix_day; /*!<  */
        uint8_t unix_hour; /*!<  */
        uint8_t unix_minute; /*!<  */
        uint8_t unix_second; /*!<  */
    } fields;
} isismepsv2_ivid7_pbu__getsystemstatus__from_t;

/*!
 * Union for storing the parameters received by resetconfigurationparameter.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__resetconfigurationparameter__from_t
{
    unsigned char raw[16];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__replyheader_t reply_header; /*!<  */
        uint8_t reserved; /*!<  */
        uint16_t par_id; /*!< parameter id of the parameter to get */
        uint8_t par_val[8]; /*!< parameter value encompassing n bytes. The length depends on the parameter type. */
    } fields;
} isismepsv2_ivid7_pbu__resetconfigurationparameter__from_t;

/*!
 * Union for storing the parameters sent by setconfigurationparameter.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__setconfigurationparameter__to_t
{
    unsigned char raw[10];
    struct __attribute__ ((__packed__))
    {
        uint16_t par_id; /*!< parameter id of the parameter to get */
        uint8_t par_val[8]; /*!< new parameter value encompassing n bytes. The length depends on the parameter type. */
    } fields;
} isismepsv2_ivid7_pbu__setconfigurationparameter__to_t;

/*!
 * Union for storing the parameters received by setconfigurationparameter.
 */
typedef union __attribute__((__packed__)) _isismepsv2_ivid7_pbu__setconfigurationparameter__from_t
{
    unsigned char raw[16];
    struct __attribute__ ((__packed__))
    {
        isismepsv2_ivid7_pbu__replyheader_t reply_header; /*!<  */
        uint8_t reserved; /*!<  */
        uint16_t par_id; /*!< parameter id of the parameter to get */
        uint8_t par_val[8]; /*!< parameter value encompassing n bytes. The length depends on the parameter type. */
    } fields;
} isismepsv2_ivid7_pbu__setconfigurationparameter__from_t;

#ifdef __cplusplus
}
#endif

#endif /* ISISMEPSV2_IVID7_PBU_TYPES_H_ */

