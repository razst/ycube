/*
 * isis_ants_types.h
 *
 * AUTOGENERATED CODE
 * Please do not perform manual edits
 * Generated using autogen v1.0.3
 *
 * Generated from: isis_ants.yaml
 */

#ifndef ISIS_ANTS_TYPES_H_
#define ISIS_ANTS_TYPES_H_

#include <stddef.h>
#include <stdint.h>

#ifdef __cplusplus
extern "C"
{
#endif

/* DEFINES */

#define ISIS_ANTS_DEPLOY1_ID {0xA1}
#define ISIS_ANTS_DEPLOY2_ID {0xA2}
#define ISIS_ANTS_DEPLOY3_ID {0xA3}
#define ISIS_ANTS_DEPLOY4_ID {0xA4}
#define ISIS_ANTS_START_AUTO_DEPLOY_ID {0xA5}
#define ISIS_ANTS_CANCEL_DEPLOY_ID {0xA9}
#define ISIS_ANTS_RESET_ID {0xAA}
#define ISIS_ANTS_DISARM_ID {0xAC}
#define ISIS_ANTS_ARM_ID {0xAD}
#define ISIS_ANTS_GET_DEPLOY1_COUNT_ID {0xB0}
#define ISIS_ANTS_GET_DEPLOY2_COUNT_ID {0xB1}
#define ISIS_ANTS_GET_DEPLOY3_COUNT_ID {0xB2}
#define ISIS_ANTS_GET_DEPLOY4_COUNT_ID {0xB3}
#define ISIS_ANTS_GET_DEPLOY1_TIME_ID {0xB4}
#define ISIS_ANTS_GET_DEPLOY2_TIME_ID {0xB5}
#define ISIS_ANTS_GET_DEPLOY3_TIME_ID {0xB6}
#define ISIS_ANTS_GET_DEPLOY4_TIME_ID {0xB7}
#define ISIS_ANTS_DEPLOY1_OVERRIDE_ID {0xBA}
#define ISIS_ANTS_DEPLOY2_OVERRIDE_ID {0xBB}
#define ISIS_ANTS_DEPLOY3_OVERRIDE_ID {0xBC}
#define ISIS_ANTS_DEPLOY4_OVERRIDE_ID {0xBD}
#define ISIS_ANTS_GET_TEMPERATURE_ID {0xC0}
#define ISIS_ANTS_GET_STATUS_ID {0xC3}
#define ISIS_ANTS_GET_IDTIMELEFT_ID {0xC4}
#define ISIS_ANTS_CANCEL_ID_ID {0xC5}
#define ISIS_ANTS_GET_UPTIME_ID {0xC6}
#define ISIS_ANTS_GET_ALL_TELEMETRY_ID {0xC7}
#define ISIS_ANTS_CLEAR_WDG_ID {0xCC}


/* ENUMS */

/* STRUCTS */

/*!
 *  ISIS_ANTS instance structure
 */
typedef struct
{
    uint8_t i2cAddr; /*!< I2C address used for this instance */
} ISIS_ANTS_t;

/*!
 * Union for storing the parameters received by get_all_telemetry.
 */
typedef union __attribute__((__packed__)) _isis_ants__get_all_telemetry__from_t
{
    unsigned char raw[9];
    struct __attribute__ ((__packed__))
    {
        uint16_t temperature; /*!< raw 10 bits measurement of the temperature \note conversion: eng. value = -0.2922 * raw + 190.65*/
        uint16_t arm_state : 1; /*!< antenna system arm state */
        uint16_t antenna4_burn_state : 1; /*!< antenna 4 deploying state */
        uint16_t antenna4_timeout : 1; /*!< antenna 4 deployment timeout */
        uint16_t antenna4_switch_state : 1; /*!< antenna 4 deployment switch state */
        uint16_t independent_burn_state : 1; /*!< antenna system independent burn state */
        uint16_t antenna3_burn_state : 1; /*!< antenna 3 deploying state */
        uint16_t antenna3_timeout : 1; /*!< antenna 3 deployment timeout */
        uint16_t antenna3_switch_state : 1; /*!< antenna 3 deployment switch state */
        uint16_t switch_ignore_state : 1; /*!< antenna system switch-ignore state */
        uint16_t antenna2_burn_state : 1; /*!< antenna 2 deploying state */
        uint16_t antenna2_timeout : 1; /*!< antenna 2 deployment timeout */
        uint16_t antenna2_switch_state : 1; /*!< antenna 2 deployment switch state */
        uint16_t reserved : 1; /*!< reserved */
        uint16_t antenna1_burn_state : 1; /*!< antenna 1 deploying state */
        uint16_t antenna1_timeout : 1; /*!< antenna 1 deployment timeout */
        uint16_t antenna1_switch_state : 1; /*!< antenna 1 deployment switch state */
        uint32_t uptime; /*!< ISIS Antenna Systems uptime value in seconds */
        uint8_t update_flag; /*!< Data updated flag, 0 - not updated, 255 - updated */
    } fields;
} isis_ants__get_all_telemetry__from_t;

/*!
 * Union for storing the parameters received by get_status.
 */
typedef union __attribute__((__packed__)) _isis_ants__get_status__from_t
{
    unsigned char raw[2];
    struct __attribute__ ((__packed__))
    {
        uint16_t arm_state : 1; /*!< antenna system arm state */
        uint16_t antenna4_burn_state : 1; /*!< antenna 4 deploying state */
        uint16_t antenna4_timeout : 1; /*!< antenna 4 deployment timeout */
        uint16_t antenna4_switch_state : 1; /*!< antenna 4 deployment switch state */
        uint16_t independent_burn_state : 1; /*!< antenna system independent burn state */
        uint16_t antenna3_burn_state : 1; /*!< antenna 3 deploying state */
        uint16_t antenna3_timeout : 1; /*!< antenna 3 deployment timeout */
        uint16_t antenna3_switch_state : 1; /*!< antenna 3 deployment switch state */
        uint16_t switch_ignore_state : 1; /*!< antenna system switch-ignore state */
        uint16_t antenna2_burn_state : 1; /*!< antenna 2 deploying state */
        uint16_t antenna2_timeout : 1; /*!< antenna 2 deployment timeout */
        uint16_t antenna2_switch_state : 1; /*!< antenna 2 deployment switch state */
        uint16_t reserved : 1; /*!< reserved */
        uint16_t antenna1_burn_state : 1; /*!< antenna 1 deploying state */
        uint16_t antenna1_timeout : 1; /*!< antenna 1 deployment timeout */
        uint16_t antenna1_switch_state : 1; /*!< antenna 1 deployment switch state */
    } fields;
} isis_ants__get_status__from_t;

/*!
 * Union for storing the parameters received by get_temperature.
 */
typedef union __attribute__((__packed__)) _isis_ants__get_temperature__from_t
{
    unsigned char raw[3];
    struct __attribute__ ((__packed__))
    {
        uint16_t temperature; /*!< raw 10 bits measurement of the temperature \note conversion: eng. value = -0.2922 * raw + 190.65*/
        uint8_t update_flag; /*!< Data updated flag, 0 - not updated, 255 - updated */
    } fields;
} isis_ants__get_temperature__from_t;

#ifdef __cplusplus
}
#endif

#endif /* ISIS_ANTS_TYPES_H_ */

