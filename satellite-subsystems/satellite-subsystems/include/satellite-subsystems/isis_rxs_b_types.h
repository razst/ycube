/*
 * isis_rxs_b_types.h
 *
 * AUTOGENERATED CODE
 * Please do not perform manual edits
 * Generated using autogen v1.0.3
 *
 * Generated ICD version: 1.0
 * Generated from: isis_rxs_revb.yaml
 */

#ifndef ISIS_RXS_B_TYPES_H_
#define ISIS_RXS_B_TYPES_H_

#include <stddef.h>
#include <stdint.h>

#ifdef __cplusplus
extern "C"
{
#endif

/* DEFINES */

#define ISIS_RXS_B_GET_RX_TELEMETRY_ID {0x1A}
#define ISIS_RXS_B_GET_FRAME_COUNT_ID {0x21}
#define ISIS_RXS_B_GET_FRAME_ID {0x22}
#define ISIS_RXS_B_REMOVE_FRAME_ID {0x24}
#define ISIS_RXS_B_GET_FRAME_COUNT_LENGTH_ID {0x25}
#define ISIS_RXS_B_REMOVE_FRAME_ALL_ID {0x26}
#define ISIS_RXS_B_SET_RX_RF_FREQ_ID {0x32}
#define ISIS_RXS_B_GET_RX_RF_FREQ_ID {0x33}
#define ISIS_RXS_B_GET_RX_SINADTEST_ID {0x35}
#define ISIS_RXS_B_RX_UPTIME_ID {0x40}
#define ISIS_RXS_B_GET_RX_SWINFO_ID {0x42}
#define ISIS_RXS_B_GET_RX_LAST_RESET_CAUSE_ID {0x50}
#define ISIS_RXS_B_RESET_SW_RX_ID {0xAA}
#define ISIS_RXS_B_RESET_HW_RX_ID {0xAB}
#define ISIS_RXS_B_RESET_WDG_RX_ID {0xCC}

#define ISIS_RXS_B_GET_FRAME_MAX_DATA_LENGTH 200
#define ISIS_RXS_B_GET_FRAME_COUNT_LENGTH_MAX_P_FRAME_LENGTH_LENGTH 120

/* ENUMS */

/* STRUCTS */

/*!
 *  ISIS_RXS_B instance structure
 */
typedef struct
{
    uint8_t i2cAddr; /*!< I2C address used for this instance */
    size_t maxReceiveBufferLength;
} ISIS_RXS_B_t;

/*!
 * Structure the parameters received by get_frame.
 */
typedef struct __attribute__((__packed__))
_isis_rxs_b__get_frame__from_t
{
    uint16_t length; /*!< Frame contents size */
    uint16_t doppler; /*!< Doppler frequency \note conversion: eng. value = 13.352 * raw + -44600*/
    uint16_t rssi; /*!< This field contains the measured Received Signal Strength Indicator (RSSI) at the reception time \note conversion: eng. value = 0.03 * raw + -227*/
    uint8_t* data; /*!< Frame contents (maximum length: 200 elements) */
} isis_rxs_b__get_frame__from_t;

/*!
 * Structure the parameters received by get_frame_count_length.
 */
typedef struct __attribute__((__packed__))
_isis_rxs_b__get_frame_count_length__from_t
{
    uint16_t frames_nb; /*!< Number of frames in receive buffer */
    uint16_t* p_frame_length; /*!< Frame contents size (maximum length: 120 elements) */
} isis_rxs_b__get_frame_count_length__from_t;

/*!
 * Union for storing the parameters received by get_rx_swinfo.
 */
typedef union __attribute__((__packed__)) _isis_rxs_b__get_rx_swinfo__from_t
{
    unsigned char raw[40];
    struct __attribute__ ((__packed__))
    {
        char swinfo[40]; /*!< Firmware information */
    } fields;
} isis_rxs_b__get_rx_swinfo__from_t;

/*!
 * Union for storing the parameters received by get_rx_telemetry.
 */
typedef union __attribute__((__packed__)) _isis_rxs_b__get_rx_telemetry__from_t
{
    unsigned char raw[16];
    struct __attribute__ ((__packed__))
    {
        uint16_t doppler; /*!< Raw measurement value of the instantaneous Doppler offset of the signal at the receiver port. \note conversion: eng. value = 13.352 * raw + -44600*/
        uint16_t rssi; /*!< This field contains the measured Received Signal Strength Indicator (RSSI) at the reception time \note conversion: eng. value = 0.03 * raw + -227*/
        uint16_t voltage; /*!< Raw measurement value of the power bus voltage. \note conversion: eng. value = 0.004912686 * raw + 0.06*/
        uint16_t current_total; /*!< Raw measurement value of the total supply current. \note conversion: eng. value = 0.072334196 * raw */
        uint16_t temp_rf; /*!< Raw measurement value of the RXS temperature. \note conversion: eng. value = -0.07669 * raw + 195.6037*/
        uint16_t temp_board; /*!< Raw measurement of board temperature \note conversion: eng. value = -0.07669 * raw + 195.6037*/
        uint16_t last_doppler; /*!< Last packed received Doppler offset at the receiver port. \note conversion: eng. value = 13.352 * raw + -44600*/
        uint16_t last_rssi; /*!< Last packed received Received Signal Strength Indicator (RSSI) at the receiver port \note conversion: eng. value = 0.03 * raw + -227*/
    } fields;
} isis_rxs_b__get_rx_telemetry__from_t;

#ifdef __cplusplus
}
#endif

#endif /* ISIS_RXS_B_TYPES_H_ */

