/*
 * isis_ants2_types.h
 *
 * AUTOGENERATED CODE
 * Please do not perform manual edits
 *
 * Generated ICD version: 1.0
 * Generated from: isis_ants2.yaml
 */

#ifndef ISIS_ANTS2_TYPES_H_
#define ISIS_ANTS2_TYPES_H_

#include <stddef.h>
#include <stdint.h>

/* DEFINES */

#define ISIS_ANTS2_DEPLOY1_ID 0xA1
#define ISIS_ANTS2_DEPLOY2_ID 0xA2
#define ISIS_ANTS2_DEPLOY1_REDUNDANT_ID 0xA3
#define ISIS_ANTS2_DEPLOY2_REDUNDANT_ID 0xA4
#define ISIS_ANTS2_START_AUTO_DEPLOY_ID 0xA5
#define ISIS_ANTS2_START_AUTO_DEPLOY_REDUNDANT_ID 0xA6
#define ISIS_ANTS2_CANCEL_DEPLOY_ID 0xA9
#define ISIS_ANTS2_RESET_ID 0xAA
#define ISIS_ANTS2_DISARM_ID 0xAC
#define ISIS_ANTS2_ARM_ID 0xAD
#define ISIS_ANTS2_GET_DEPLOY1_COUNT_ID 0xB0
#define ISIS_ANTS2_GET_DEPLOY2_COUNT_ID 0xB1
#define ISIS_ANTS2_GET_DEPLOY1_REDUNDANT_COUNT_ID 0xB2
#define ISIS_ANTS2_GET_DEPLOY2_REDUNDANT_COUNT_ID 0xB3
#define ISIS_ANTS2_GET_DEPLOY1_TIME_ID 0xB4
#define ISIS_ANTS2_GET_DEPLOY2_TIME_ID 0xB5
#define ISIS_ANTS2_GET_DEPLOY1_REDUNDANT_TIME_ID 0xB6
#define ISIS_ANTS2_GET_DEPLOY2_REDUNDANT_TIME_ID 0xB7
#define ISIS_ANTS2_DEPLOY1_OVERRIDE_ID 0xBA
#define ISIS_ANTS2_DEPLOY2_OVERRIDE_ID 0xBB
#define ISIS_ANTS2_DEPLOY1_REDUNDANT_OVERRIDE_ID 0xBC
#define ISIS_ANTS2_DEPLOY2_REDUNDANT_OVERRIDE_ID 0xBD
#define ISIS_ANTS2_GET_TEMPERATURE_ID 0xC0
#define ISIS_ANTS2_GET_STATUS_ID 0xC3
#define ISIS_ANTS2_GET_IDTIMELEFT_ID 0xC4
#define ISIS_ANTS2_CANCEL_ID_ID 0xC5
#define ISIS_ANTS2_GET_UPTIME_ID 0xC6
#define ISIS_ANTS2_GET_ALL_TELEMETRY_ID 0xC7
#define ISIS_ANTS2_GET_ALL_TELEMETRY_REVA_ID 0xC7
#define ISIS_ANTS2_CLEAR_WDG_ID 0xCC


/* ENUMS */

/* STRUCTS */

/*!
 *  ISIS_ANTS2 instance structure
 */
typedef struct
{
    uint8_t i2cAddr; /*!< I2C address used for this instance */
} ISIS_ANTS2_t;

/*!
 * Union for storing the parameters for struct DeploymentTelemetry.
 */
typedef union __attribute__((__packed__)) _isis_ants2__deploymenttelemetry_t
{
    unsigned char raw[2];
    struct __attribute__ ((__packed__))
    {
        uint16_t arm_state : 1; /*!< Antenna system arm state */
        uint16_t antenna2_redundant_burn_state : 1; /*!< Antenna 2 (redundant) deploying state. 1 means this antenna's deployment system is currently active */
        uint16_t antenna2_redundant_timeout : 1; /*!< Antenna 2 (redundant) deployment timeout. 1 means a time limit was reached (specified time or safety time limit) */
        uint16_t reserved2 : 1; /*!< reserved */
        uint16_t independent_burn_state : 1; /*!< Antenna system independent burn state */
        uint16_t antenna1_redundant_burn_state : 1; /*!< Antenna 1 (redundant) deploying state. 1 means this antenna's deployment system is currently active */
        uint16_t antenna1_redundant_timeout : 1; /*!< Antenna 1 (redundant) deployment timeout. 1 means a time limit was reached (specified time or safety time limit) */
        uint16_t reserved1 : 1; /*!< reserved */
        uint16_t switch_ignore_state : 1; /*!< Antenna system switch-ignore state */
        uint16_t antenna2_burn_state : 1; /*!< Antenna 2 (primary) deploying state. 1 means this antenna's deployment system is currently active */
        uint16_t antenna2_timeout : 1; /*!< Antenna 2 (primary) deployment timeout. 1 means a time limit was reached (specified time or safety time limit) */
        uint16_t antenna2_undeployed : 1; /*!< Antenna 2 (primary) deployment switch state. 1 means NOT deployed */
        uint16_t reserved0 : 1; /*!< reserved */
        uint16_t antenna1_burn_state : 1; /*!< Antenna 1 (primary) deploying state. 1 means this antenna's deployment system is currently active */
        uint16_t antenna1_timeout : 1; /*!< Antenna 1 (primary) deployment timeout. 1 means a time limit was reached (specified time or safety time limit) */
        uint16_t antenna1_undeployed : 1; /*!< Antenna 1 (primary) deployment switch state. 1 means NOT deployed */
    } fields;
} isis_ants2__deploymenttelemetry_t;

/*!
 * Union for storing the parameters received by get_all_telemetry.
 */
typedef union __attribute__((__packed__)) _isis_ants2__get_all_telemetry__from_t
{
    unsigned char raw[11];
    struct __attribute__ ((__packed__))
    {
        uint16_t temperature; /*!< Raw 10 bits measurement of the temperature */
        uint16_t voltage; /*!< Raw 10 bits measurement of the voltage */
        isis_ants2__deploymenttelemetry_t deployment_status; /*!< Antenna deployment status */
        uint32_t uptime; /*!< Uptime value in seconds */
        uint8_t update_flag; /*!< Data updated flag, 0 - not updated, 255 - updated */
    } fields;
} isis_ants2__get_all_telemetry__from_t;

/*!
 * Union for storing the parameters received by get_all_telemetry_reva.
 */
typedef union __attribute__((__packed__)) _isis_ants2__get_all_telemetry_reva__from_t
{
    unsigned char raw[9];
    struct __attribute__ ((__packed__))
    {
        uint16_t temperature; /*!< Raw 10 bits measurement of the temperature */
        isis_ants2__deploymenttelemetry_t deployment_status; /*!< Antenna deployment status */
        uint32_t uptime; /*!< Uptime value in seconds */
        uint8_t update_flag; /*!< Data updated flag, 0 - not updated, 255 - updated */
    } fields;
} isis_ants2__get_all_telemetry_reva__from_t;

/*!
 * Union for storing the parameters received by get_temperature.
 */
typedef union __attribute__((__packed__)) _isis_ants2__get_temperature__from_t
{
    unsigned char raw[3];
    struct __attribute__ ((__packed__))
    {
        uint16_t temperature; /*!< Raw 10 bits measurement of the temperature */
        uint8_t update_flag; /*!< Data updated flag, 0 - not updated, 255 - updated */
    } fields;
} isis_ants2__get_temperature__from_t;

#endif /* ISIS_ANTS2_TYPES_H_ */

