/*
 * isis_ants_rev2.h
 *
 * AUTOGENERATED CODE
 * Please do not perform manual edits
 * Generated using autogen v1.0.3
 *
 * Generated ICD version: 1.0
 * Generated from: isis_ants2.yaml
 */

#ifndef ISIS_ANTS_REV2_H_
#define ISIS_ANTS_REV2_H_

#include "isis_ants_rev2_types.h"
#include <satellite-subsystems/common_types.h>

#ifdef __cplusplus
extern "C"
{
#endif

/*!
 *	Initialize driver for a number of ISIS_ANTS_REV2 instances. The first instance can then be referenced by using index 0, the second by using index 1, etc.
 *
 *	@param[in] isis_ants_rev2 Pointer to array of ISIS_ANTS_REV2 instances
 *	@param[in] isis_ants_rev2Count Number of ISIS_ANTS_REV2 instances pointed to by isis_ants_rev2 input parameter
 * 	@return Error code as specified in common_types.h
 */
driver_error_t ISIS_ANTS_REV2_Init(const ISIS_ANTS_REV2_t* isis_ants_rev2, uint8_t isis_ants_rev2Count);

/*!
 * Arms the antenna system. The system needs to be armed to be able to deploy antennas.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__arm(uint8_t index);

/*!
 * Deactivate any deployment systems that are currently active, and terminate ongoing automated sequential antenna deployment. This command only has effect when the system has been armed and a deployment system is currently active or an automated sequential antenna deployment is currently ongoing.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__cancel_deploy(uint8_t index);

/*!
 * Cancel independent burn mode
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__cancel_id(uint8_t index);

/*!
 * Performs a reset of the I2C watchdog without performing any other operation
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__clear_wdg(uint8_t index);

/*!
 * Attempt to deploy antenna 1 by activating the deployment system for antenna 1
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__deploy1(uint8_t index, uint8_t max_time_in);

/*!
 * Attempt to deploy antenna 1 by activating the deployment system for antenna 1. This command ignores the corresponding deployment switch that indicates deployment of antenna 1.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__deploy1_override(uint8_t index, uint8_t max_time_in);

/*!
 * Attempt to deploy antenna 1 by activating the deployment system for antenna 1
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__deploy1_redundant(uint8_t index, uint8_t max_time_in);

/*!
 * Attempt to deploy antenna 2 by activating the deployment system for antenna 1. This command ignores the corresponding deployment switch that indicates deployment of antenna 1.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__deploy1_redundant_override(uint8_t index, uint8_t max_time_in);

/*!
 * Attempt to deploy antenna 2 by activating the deployment system for antenna 2
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__deploy2(uint8_t index, uint8_t max_time_in);

/*!
 * Attempt to deploy antenna 2 by activating the deployment system for antenna 2. This command ignores the corresponding deployment switch that indicates deployment of antenna 2.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__deploy2_override(uint8_t index, uint8_t max_time_in);

/*!
 * Attempt to deploy antenna 2 by activating the deployment system for antenna 2
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__deploy2_redundant(uint8_t index, uint8_t max_time_in);

/*!
 * Attempt to deploy antenna 2 by activating the deployment system for antenna 2. This command ignores the corresponding deployment switch that indicates deployment of antenna 2.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__deploy2_redundant_override(uint8_t index, uint8_t max_time_in);

/*!
 * Disarms the antenna system. This command will deactivate any active antenna deployment systems and terminate an ongoing automated sequential antenna deployment before disarming the system. The antenna system will only be able to deploy antennas once it has been armed again.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__disarm(uint8_t index);

/*!
 * Obtain ISIS Antenna Systems all telemetry structure.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] response Struct with response from subsystem
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_all_telemetry(uint8_t index, isis_ants_rev2__get_all_telemetry__from_t *response);

/*!
 * Obtain ISIS Antenna Systems all telemetry structure.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] response Struct with response from subsystem
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_all_telemetry_reva(uint8_t index, isis_ants_rev2__get_all_telemetry_reva__from_t *response);

/*!
 * Reports the number of times the deployment system for antenna 1 has been activated since the last reset of the microcontroller.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] deploy_count_out The number of deployment system activations. This number has a minimum value of 0 and a maximum value of 255.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_deploy1_count(uint8_t index, uint8_t *deploy_count_out);

/*!
 * Reports the number of times the deployment system for antenna 1 has been activated since the last reset of the microcontroller.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] deploy_count_out The number of deployment system activations. This number has a minimum value of 0 and a maximum value of 255.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_deploy1_redundant_count(uint8_t index, uint8_t *deploy_count_out);

/*!
 * Reports the total amount of time the deployment system for antenna 1 has been active since the last reset of the microcontroller. Please note that this value is cumulative, i.e. it sums the activation times for separate deployment system activations.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] deploy_time_out
 * @parblock
 * The cumulative activation time of the deployment system
 *
 * conversion: eng. value [in seconds] = 0.05 * raw 
 * @endparblock
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_deploy1_redundant_time(uint8_t index, uint16_t *deploy_time_out);

/*!
 * Reports the total amount of time the deployment system for antenna 1 has been active since the last reset of the microcontroller. Please note that this value is cumulative, i.e. it sums the activation times for separate deployment system activations.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] deploy_time_out
 * @parblock
 * The cumulative activation time of the deployment system
 *
 * conversion: eng. value [in seconds] = 0.05 * raw 
 * @endparblock
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_deploy1_time(uint8_t index, uint16_t *deploy_time_out);

/*!
 * Reports the number of times the deployment system for antenna 2 has been activated since the last reset of the microcontroller.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] deploy_count_out The number of deployment system activations. This number has a minimum value of 0 and a maximum value of 255.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_deploy2_count(uint8_t index, uint8_t *deploy_count_out);

/*!
 * Reports the number of times the deployment system for antenna 2 has been activated since the last reset of the microcontroller.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] deploy_count_out The number of deployment system activations. This number has a minimum value of 0 and a maximum value of 255.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_deploy2_redundant_count(uint8_t index, uint8_t *deploy_count_out);

/*!
 * Reports the total amount of time the deployment system for antenna 2 has been active since the last reset of the microcontroller. Please note that this value is cumulative, i.e. it sums the activation times for separate deployment system activations.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] deploy_time_out
 * @parblock
 * The cumulative activation time of the deployment system
 *
 * conversion: eng. value [in seconds] = 0.05 * raw 
 * @endparblock
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_deploy2_redundant_time(uint8_t index, uint16_t *deploy_time_out);

/*!
 * Reports the total amount of time the deployment system for antenna 2 has been active since the last reset of the microcontroller. Please note that this value is cumulative, i.e. it sums the activation times for separate deployment system activations.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] deploy_time_out
 * @parblock
 * The cumulative activation time of the deployment system
 *
 * conversion: eng. value [in seconds] = 0.05 * raw 
 * @endparblock
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_deploy2_time(uint8_t index, uint16_t *deploy_time_out);

/*!
 * Get independent burn time left
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] uptime_out Independent burn time left
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_idtimeleft(uint8_t index, uint16_t *uptime_out);

/*!
 * Report deployment status
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] deployment_status_out Report the deployment status of the antenna system. This status contains information for each antenna as well as system level information
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_status(uint8_t index, isis_ants_rev2__deploymenttelemetry_t *deployment_status_out);

/*!
 * Measures the temperature as reported by the temperature sensor on the antenna system.
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] response Struct with response from subsystem
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_temperature(uint8_t index, isis_ants_rev2__get_temperature__from_t *response);

/*!
 * Obtain antenna systems uptime
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[out] uptime_out Uptime value in seconds
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__get_uptime(uint8_t index, uint32_t *uptime_out);

/*!
 * Performs a reset of the microcontroller
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__reset(uint8_t index);

/*!
 * Start automated sequential antenna deployment (primary)
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__start_auto_deploy(uint8_t index, uint8_t max_time_in);

/*!
 * Start automated sequential antenna deployment (redundant)
 *
 * @param[in] index Index of ISIS_ANTS_REV2 in list provided during driver initialization
 * @param[in] max_time_in The maximum activation time for the deployment system in seconds. The minimum value is 0 and the maximum value is 255 seconds. Please note that if a value of 0 is specified, only the safety timeout will be taken into account.
 * @return Error code as specified in common_types.h
 */
driver_error_t isis_ants_rev2__start_auto_deploy_redundant(uint8_t index, uint8_t max_time_in);

#ifdef __cplusplus
}
#endif

#endif /* ISIS_ANTS_REV2_H_ */

